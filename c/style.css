/*Style for text*/
:root { /*Global custom variables, such as colours, that are used by many different elements*/
    --nav-color: rgb(199, 236, 246); /*The colour of the navbar*/
    --nav-hover-color: rgb(109, 166, 181); /*The colour the links change to when hovered over*/
    --footer-color: rgb(128, 128, 128); /*The background colour of the footer*/
    --footer-hover-color: rgb(80, 80, 80);
    --form-color: rgb(178, 178, 178); /*The background colour of form elements*/
    --input-color: rgb(232, 232, 232); /*The background colour of the input elements*/
    --input-focus-color: white; /*The colour of the input when the user is typing*/
    --input-placeholder-color: rgb(104, 104, 104); /*The colour of the placeholder text in an input*/
    --button-color: grey; /*The primary button colour*/
    --button-hover-color: rgb(80, 80, 80); 
    --output-color: rgb(109, 166, 181); /*The background colour of the list of items in the fridge/shopping list*/
    --output-item-color: rgb(232, 232, 232); /*The background colour of each list item*/
    --checkbox-color: rgb(178, 178, 178); /*The colour of a checkbox*/
    --checkbox-hover-color: rgb(128, 128, 128); 
    --accordion-color: rgb(205, 205, 205);
    --accordion-active-color: rgb(226, 226, 226);
    --form-edit-color: rgb(200, 200, 200);
}
body {
    font-family: Arial, Helvetica, sans-serif; 
    margin: 0;
    padding: 0;
} 
h1 {
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    font-size: 2rem; /*The font sizes will be relative to the user's browser settings*/
    text-align: center; /*Puts the text in the centre of the page*/
}
h2 {
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    font-size: 1.5rem;
    font-weight: lighter;
    text-align: center;
}
p {
    margin: 1em;
}

.left, [data-float=left /*The float effect can be applied just by adding an attribute*/] {float: left;}
.right, [data-float=right] {float: right;}
.clear, [data-clear=''] {clear: both;}
[data-clear=none] {clear: none;}
.cf::after, [data-cf] /*clearfix hack*/ { 
    /*Adds an element which will float below the floating objects, 
    which will cause the navbar to extend to the full height of the elements*/
    content: "";
    clear: both;
    display: table;
}
[data-justify=right] {text-justify: right;} /*To justify the text to the right of the element*/

[data-decor=none] { /*To remove the underline and colour from links*/
    text-decoration: none;
    color: inherit; /*The text colour is that of the parent element*/
}
[data-decor=underline] { /*Only removing the colour*/
    color: inherit;
} 
a[data-decor]:not([data-decor=none]):hover { /*Adding hover to links*/
    color: var(--checkbox-hover-color)
}
div[data-inline] {display: inline-block} 
[data-hidden] {
    display: none;
}

nav#main {
    position: sticky; /*The navbar will stay at the top of the page when the user scrolls down*/
    top: 0; 
    width: 100%; /*To make the navbar fill the entire width of the page*/
    background-color: var(--nav-color); 
    z-index: 10; /*To show up in front of the other pages*/
}
nav ul {
    list-style-type: none; /*Removes the bullet points beside each link*/
    margin: 0;
    padding: 0; /*Removes the large space on the left of the navbar*/
}
nav#main ul li {
    display: none;
}
nav ul li a, nav button { 
    font-size: 1.5rem;

    display: block; /*To allow for vertical padding.*/
    padding: 0.3em 0.5em; /*Padding for top/bottom, padding for left/right*/
    
    /*These attributes prevent the button from being affected by other styles*/
    background-color: inherit;
    height: auto; 

    text-decoration: none;
    color: #000;
    
}
nav ul li a:hover, nav button:hover, nav button:focus { /*When a button is hovered over*/
    background-color: var(--nav-hover-color);
    color: white;
}
nav#main:focus-within ul li {
    display: block;
    height: auto;
}
nav button {
    float:right;
    width:auto;
}

.grid-responsive { /*2 col on desktop, 1 on mobile*/
    display: grid;
    grid-template-columns: auto; /*Mobile*/
    align-items: start;
}

a[data-type] {
    text-decoration: none;
    display: inline-block;
    font-size: 1.5rem;
    height: 1.4em;
    padding: 3px 6px;
    box-sizing: border-box;
    margin: 0 0.5em;
}

.sticky {
    position: sticky;
    top: 2.1em;
    z-index: 1;
}

/*Form elements*/
form:not(.none), .form {
    background-color: var(--form-color);
    margin: auto;
    padding: 1.0rem;
    line-height: 1.6; /*To add spacing between the lines*/

    width: 100%; /*If the form takes up less space than 900px, it will fill the entire area*/
    max-width: 900px;
    box-sizing: border-box;
}
form:not(.none) div {
    margin: 1rem 0;
}
label {
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    font-size: 1.5rem;
    display: block; /*For mobile devices, to put the input below the label*/
}
input, select, button { /*Applies to all input and button elements*/
    font-size: 1.5rem;
    font-family: Arial, Helvetica, sans-serif;
    
    box-sizing: border-box; /*The height includes the padding*/
    height: 1.7em; /*Relative to the font size of the element (1.5rem)*/

    background-color: var(--input-color);
    border: none; /*Removes the default black border*/

    width: 100%; /*Fills the whole page on mobile*/
    max-width: 100%;
}
input[type=number] {
    width: 4em;
    text-align: right;
}
input[list="unit-select"] {
    width: 4em;
}

input:not([type=button]):not([type=submit]):focus { /*When the user is typing*/
    background-color: var(--input-focus-color);
}
/*Style for buttons*/
input[type=submit], [data-type=major] {
    background-color: var(--button-color);
    color: white;
    margin: 1rem 0;
}
input[type=submit]:hover, [data-type=major]:hover {
    background-color: var(--button-hover-color);
}
input[type=reset], [data-type=minor] {
    background-color: var(--input-color);
}
input[type=reset]:hover, [data-type=minor]:hover {
    background-color: var(--input-focus-color);
    
}
[data-type=edit] {
    background-color: var(--nav-color);
}
[data-type=edit]:hover {
    background-color: var(--nav-hover-color);
    color: white;
}

form textarea {
    font-size: 1rem;
    font-family: Arial, Helvetica, sans-serif;
    
    box-sizing: border-box;

    background-color: var(--input-color);
    border: none;

    width: 100%; /*The textbox fills the width of the column*/
    resize: vertical; /*The user can only change the height vertically, not horizontally*/
    height: calc(70vh - 8em); /*70% of the screen height - 8em*/
}
/*
form input[type=text]::placeholder {
    color: var(--input-placeholder-color);
}
form input[type=text]:focus::placeholder {
    color: white;
}
*/

ul#output {
    list-style-type: none;
    background-color: var(--output-color);
    padding: 0.25em 0.5em;
    font-size: 1.5rem;

    box-sizing: border-box;
    max-width: 900px; /*The output list will be no larger than this width*/
    margin: auto;
}
#output:not(.edit) li {
    padding: 0.5em;
    background-color: var(--output-item-color);
    width: 100%;
    box-sizing: border-box;
    margin: 0.25em 0;

    display: grid; /*To make a grid display of the elements inside*/
    grid-template-columns: auto auto; /*Creates two colums of equal size*/
    justify-content: space-between; /*The items are spread to the sides of the container*/

    gap: 0.6em; /*Adds gaps between the grid items*/
}
#output.grid-600 li {
    grid-template-columns: 100%; /*One single column*/
    row-gap: 0;
}
#output.grid-600 input[type=submit] {
    margin: 0;
}

#output input:not([type=submit]), #output select { /*Excludes the submit button from this styling*/
    background-color: var(--input-focus-color);
}

#output form.edit-forms {
    grid-template-columns: 100%;
    background-color: var(--form-edit-color);

    padding: 0.5em;
    width: 100%;
    box-sizing: border-box;
    margin: 0.25em 0;

    display: grid; /*To make a grid display of the elements inside*/
    justify-content: space-between; /*The items are spread to the sides of the container*/

    gap: 0.6em; /*Adds gaps between the grid items*/
}

/*From W3Schools*/
.check-container {
    display: block;
    position: relative;
    padding-left: 1.59em; /*35/22*/
    cursor: pointer;
    font-size: 1em;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    z-index: 0;
}
/*Hiding default checkbox*/
.check-container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
}
/*Create a custom checkbox*/
.checkmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 1.14em; /*25/22*/
    width: 1.14em;
    background-color: var(--checkbox-color);
}
/* On mouse-over, add a grey background color */
.check-container:hover input ~ .checkmark {
    background-color: var(--checkbox-hover-color);
}
/* When the checkbox is checked, add a blue background 
.check-container input:checked ~ .checkmark {
    background-color: #2196F3;
}*/
/*Create the checkmark/indicator (hidden when not checked)*/
.checkmark:after {
    content: "";
    position: absolute;
    display: none;
}
/*Show the checkmark when checked*/
.check-container input:checked ~ .checkmark:after {
    display: block;
}
/*Style the checkmark/indicator*/
.check-container .checkmark:after {
    left: 0.41em;
    top: 0.23em;
    width: 0.23em;
    height: 0.46em;
    border: solid white;
    border-width: 0 0.14em 0.14em 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
}

ul.accordion-container {
    list-style-type: none;
    padding: 0;
    
}
ul.accordion-container li {
    width: 100%;
    box-sizing: border-box;
    
}
button.accordion {
    width: 100%;
    box-sizing: border-box;
    padding: 0.3em;
    height: auto; /*To prevent the height from being set by other CSS*/
    background-color: var(--accordion-color);
    text-align: left;
}
ul.accordion-container li > div {
    background-color: var(--accordion-active-color);
    display: none;
    padding: 0.1em 0;
}
button.accordion:hover, button.accordion.active, button.accordion:not(.js):focus {
    background-color: var(--accordion-active-color);

}
button.accordion.active + div, button.accordion:not(.js):focus + div {
    display: block
}
button.accordion:before {
    content:"\002B";
    float:right;
    margin: 0 0.5em;
    height: 100%;
}
button.accordion.active:before, button.accordion:not(.js):focus:before {
    content:"\2212";
}

footer {
    padding: 1em;
    background-color: var(--footer-color);
    color: white;
}
footer nav {
    float: left;
}
footer nav ul li a {
    font-size: 1rem; /*Makes the links smaller*/
    color: white;
}
footer nav ul li a:hover{
    background-color: var(--footer-hover-color)
}
@media only screen and (min-width:600px) { /*Styling only for computers*/
    label {
        display: inline; /*Label can be next to input*/
    }
    input, select, button { 
        width: auto;
        height: 1.4em; /*The inputs will be shorter on desktop*/
    }
    form:not(.none) div {
        margin: 0.2em;
    }
    input[type=submit], [data-type=major] {
        margin: 0;
    }
    .item-use { /*The 'use' button*/
        float: right;
    }
    #output form {
        width: auto;
    }

    /*Navbar on desktop*/
    nav#main ul li {
        display: block;
        float: left;
    }
    nav button {
        display: none; /*Hides the button on desktop*/
    }
    #output.grid-600 li {
        grid-template-columns: auto auto;
    }
    #output:not(.grid-600) form { /*The form is only narrow on mobile*/
        min-width: 10em;
    }
    #output form.edit-forms {
        grid-template-columns: auto auto;
    }
}
@media only screen and (min-width:800px) { /*For the recipe editor page*/
    .grid-responsive {
            grid-template-columns: 50% 50%;
    }
    .grid-responsive button.accordion { /*Hiding the accordion buttons on desktop*/
        display: none;
    }
    .grid-responsive.accordion-container li > div { /*Displaying the accordion content on desktop*/
        display: block
    }
}